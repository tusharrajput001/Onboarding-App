// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package workflowcommons.proxies;

public class WorkflowSeries
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject workflowSeriesMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "WorkflowCommons.WorkflowSeries";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DateDisplay("DateDisplay"),
		Date("Date"),
		WorkflowSeries_DashboardContext("WorkflowCommons.WorkflowSeries_DashboardContext");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public WorkflowSeries(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "WorkflowCommons.WorkflowSeries"));
	}

	protected WorkflowSeries(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject workflowSeriesMendixObject)
	{
		if (workflowSeriesMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("WorkflowCommons.WorkflowSeries", workflowSeriesMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a WorkflowCommons.WorkflowSeries");

		this.workflowSeriesMendixObject = workflowSeriesMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'WorkflowSeries.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static workflowcommons.proxies.WorkflowSeries initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return workflowcommons.proxies.WorkflowSeries.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static workflowcommons.proxies.WorkflowSeries initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new workflowcommons.proxies.WorkflowSeries(context, mendixObject);
	}

	public static workflowcommons.proxies.WorkflowSeries load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return workflowcommons.proxies.WorkflowSeries.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of DateDisplay
	 */
	public final java.lang.String getDateDisplay()
	{
		return getDateDisplay(getContext());
	}

	/**
	 * @param context
	 * @return value of DateDisplay
	 */
	public final java.lang.String getDateDisplay(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DateDisplay.toString());
	}

	/**
	 * Set value of DateDisplay
	 * @param datedisplay
	 */
	public final void setDateDisplay(java.lang.String datedisplay)
	{
		setDateDisplay(getContext(), datedisplay);
	}

	/**
	 * Set value of DateDisplay
	 * @param context
	 * @param datedisplay
	 */
	public final void setDateDisplay(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String datedisplay)
	{
		getMendixObject().setValue(context, MemberNames.DateDisplay.toString(), datedisplay);
	}

	/**
	 * @return value of Date
	 */
	public final java.util.Date getDate()
	{
		return getDate(getContext());
	}

	/**
	 * @param context
	 * @return value of Date
	 */
	public final java.util.Date getDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Date.toString());
	}

	/**
	 * Set value of Date
	 * @param date
	 */
	public final void setDate(java.util.Date date)
	{
		setDate(getContext(), date);
	}

	/**
	 * Set value of Date
	 * @param context
	 * @param date
	 */
	public final void setDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date date)
	{
		getMendixObject().setValue(context, MemberNames.Date.toString(), date);
	}

	/**
	 * @return value of WorkflowSeries_DashboardContext
	 */
	public final workflowcommons.proxies.DashboardContext getWorkflowSeries_DashboardContext() throws com.mendix.core.CoreException
	{
		return getWorkflowSeries_DashboardContext(getContext());
	}

	/**
	 * @param context
	 * @return value of WorkflowSeries_DashboardContext
	 */
	public final workflowcommons.proxies.DashboardContext getWorkflowSeries_DashboardContext(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		workflowcommons.proxies.DashboardContext result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.WorkflowSeries_DashboardContext.toString());
		if (identifier != null)
			result = workflowcommons.proxies.DashboardContext.load(context, identifier);
		return result;
	}

	/**
	 * Set value of WorkflowSeries_DashboardContext
	 * @param workflowseries_dashboardcontext
	 */
	public final void setWorkflowSeries_DashboardContext(workflowcommons.proxies.DashboardContext workflowseries_dashboardcontext)
	{
		setWorkflowSeries_DashboardContext(getContext(), workflowseries_dashboardcontext);
	}

	/**
	 * Set value of WorkflowSeries_DashboardContext
	 * @param context
	 * @param workflowseries_dashboardcontext
	 */
	public final void setWorkflowSeries_DashboardContext(com.mendix.systemwideinterfaces.core.IContext context, workflowcommons.proxies.DashboardContext workflowseries_dashboardcontext)
	{
		if (workflowseries_dashboardcontext == null)
			getMendixObject().setValue(context, MemberNames.WorkflowSeries_DashboardContext.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.WorkflowSeries_DashboardContext.toString(), workflowseries_dashboardcontext.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return workflowSeriesMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final workflowcommons.proxies.WorkflowSeries that = (workflowcommons.proxies.WorkflowSeries) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "WorkflowCommons.WorkflowSeries";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
